:set -XPackageImports

import Control.Applicative
import Control.Monad hiding ( forM , forM_ , mapM , mapM_ , msum , sequence , sequence_ )
import Data.Bool
import Data.Either
import Data.Foldable
import Data.Function
import Data.Maybe
import Data.Monoid
import Data.String
import Data.Traversable
import Data.Tuple
import Data.Eq
import Data.Ord
import Data.Int

let if' p x y = if p then x else y

:set prompt "Î»: "

:def hlint const . return $ ":! hlint \"src\""
:def hoogle \s -> return $ ":! hoogle --count=15 \"" ++ s ++ "\""
:def pl \s -> return $ ":! pointfree \"" ++ s ++ "\""
:def clear const . return $ ":! clear"

-- show types
:set +t
